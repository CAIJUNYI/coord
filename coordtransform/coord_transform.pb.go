// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.11.4
// source: coord_transform.proto

package coordtransform

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lat float64 `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon float64 `protobuf:"fixed64,2,opt,name=lon,proto3" json:"lon,omitempty"`
}

func (x *Point) Reset() {
	*x = Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coord_transform_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_coord_transform_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_coord_transform_proto_rawDescGZIP(), []int{0}
}

func (x *Point) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *Point) GetLon() float64 {
	if x != nil {
		return x.Lon
	}
	return 0
}

var File_coord_transform_proto protoreflect.FileDescriptor

var file_coord_transform_proto_rawDesc = []byte{
	0x0a, 0x15, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0x2b, 0x0a, 0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c,
	0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x03, 0x6c, 0x6f, 0x6e, 0x32, 0x8c, 0x03, 0x0a, 0x0e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x3e, 0x0a, 0x0c, 0x47, 0x43, 0x4a, 0x30, 0x32,
	0x54, 0x6f, 0x57, 0x47, 0x53, 0x38, 0x34, 0x12, 0x15, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x1a, 0x15,
	0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0c, 0x57, 0x47, 0x53, 0x38, 0x34,
	0x54, 0x6f, 0x47, 0x43, 0x4a, 0x30, 0x32, 0x12, 0x15, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x1a, 0x15,
	0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0b, 0x42, 0x64, 0x30, 0x39, 0x54,
	0x6f, 0x47, 0x43, 0x4a, 0x30, 0x32, 0x12, 0x15, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x1a, 0x15, 0x2e,
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0b, 0x47, 0x43, 0x4a, 0x30, 0x32, 0x54,
	0x6f, 0x42, 0x64, 0x30, 0x39, 0x12, 0x15, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x1a, 0x15, 0x2e, 0x63,
	0x6f, 0x6f, 0x72, 0x64, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0b, 0x42, 0x64, 0x30, 0x39, 0x54, 0x6f, 0x57,
	0x47, 0x53, 0x38, 0x34, 0x12, 0x15, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x1a, 0x15, 0x2e, 0x63, 0x6f,
	0x6f, 0x72, 0x64, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0b, 0x57, 0x47, 0x53, 0x38, 0x34, 0x54, 0x6f, 0x42,
	0x64, 0x30, 0x39, 0x12, 0x15, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x1a, 0x15, 0x2e, 0x63, 0x6f, 0x6f,
	0x72, 0x64, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x22, 0x00, 0x42, 0x12, 0x5a, 0x10, 0x2e, 0x3b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_coord_transform_proto_rawDescOnce sync.Once
	file_coord_transform_proto_rawDescData = file_coord_transform_proto_rawDesc
)

func file_coord_transform_proto_rawDescGZIP() []byte {
	file_coord_transform_proto_rawDescOnce.Do(func() {
		file_coord_transform_proto_rawDescData = protoimpl.X.CompressGZIP(file_coord_transform_proto_rawDescData)
	})
	return file_coord_transform_proto_rawDescData
}

var file_coord_transform_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_coord_transform_proto_goTypes = []interface{}{
	(*Point)(nil), // 0: coordtransform.Point
}
var file_coord_transform_proto_depIdxs = []int32{
	0, // 0: coordtransform.CoordTransform.GCJ02ToWGS84:input_type -> coordtransform.Point
	0, // 1: coordtransform.CoordTransform.WGS84ToGCJ02:input_type -> coordtransform.Point
	0, // 2: coordtransform.CoordTransform.Bd09ToGCJ02:input_type -> coordtransform.Point
	0, // 3: coordtransform.CoordTransform.GCJ02ToBd09:input_type -> coordtransform.Point
	0, // 4: coordtransform.CoordTransform.Bd09ToWGS84:input_type -> coordtransform.Point
	0, // 5: coordtransform.CoordTransform.WGS84ToBd09:input_type -> coordtransform.Point
	0, // 6: coordtransform.CoordTransform.GCJ02ToWGS84:output_type -> coordtransform.Point
	0, // 7: coordtransform.CoordTransform.WGS84ToGCJ02:output_type -> coordtransform.Point
	0, // 8: coordtransform.CoordTransform.Bd09ToGCJ02:output_type -> coordtransform.Point
	0, // 9: coordtransform.CoordTransform.GCJ02ToBd09:output_type -> coordtransform.Point
	0, // 10: coordtransform.CoordTransform.Bd09ToWGS84:output_type -> coordtransform.Point
	0, // 11: coordtransform.CoordTransform.WGS84ToBd09:output_type -> coordtransform.Point
	6, // [6:12] is the sub-list for method output_type
	0, // [0:6] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_coord_transform_proto_init() }
func file_coord_transform_proto_init() {
	if File_coord_transform_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_coord_transform_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_coord_transform_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_coord_transform_proto_goTypes,
		DependencyIndexes: file_coord_transform_proto_depIdxs,
		MessageInfos:      file_coord_transform_proto_msgTypes,
	}.Build()
	File_coord_transform_proto = out.File
	file_coord_transform_proto_rawDesc = nil
	file_coord_transform_proto_goTypes = nil
	file_coord_transform_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CoordTransformClient is the client API for CoordTransform service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CoordTransformClient interface {
	GCJ02ToWGS84(ctx context.Context, in *Point, opts ...grpc.CallOption) (*Point, error)
	WGS84ToGCJ02(ctx context.Context, in *Point, opts ...grpc.CallOption) (*Point, error)
	Bd09ToGCJ02(ctx context.Context, in *Point, opts ...grpc.CallOption) (*Point, error)
	GCJ02ToBd09(ctx context.Context, in *Point, opts ...grpc.CallOption) (*Point, error)
	Bd09ToWGS84(ctx context.Context, in *Point, opts ...grpc.CallOption) (*Point, error)
	WGS84ToBd09(ctx context.Context, in *Point, opts ...grpc.CallOption) (*Point, error)
}

type coordTransformClient struct {
	cc grpc.ClientConnInterface
}

func NewCoordTransformClient(cc grpc.ClientConnInterface) CoordTransformClient {
	return &coordTransformClient{cc}
}

func (c *coordTransformClient) GCJ02ToWGS84(ctx context.Context, in *Point, opts ...grpc.CallOption) (*Point, error) {
	out := new(Point)
	err := c.cc.Invoke(ctx, "/coordtransform.CoordTransform/GCJ02ToWGS84", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coordTransformClient) WGS84ToGCJ02(ctx context.Context, in *Point, opts ...grpc.CallOption) (*Point, error) {
	out := new(Point)
	err := c.cc.Invoke(ctx, "/coordtransform.CoordTransform/WGS84ToGCJ02", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coordTransformClient) Bd09ToGCJ02(ctx context.Context, in *Point, opts ...grpc.CallOption) (*Point, error) {
	out := new(Point)
	err := c.cc.Invoke(ctx, "/coordtransform.CoordTransform/Bd09ToGCJ02", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coordTransformClient) GCJ02ToBd09(ctx context.Context, in *Point, opts ...grpc.CallOption) (*Point, error) {
	out := new(Point)
	err := c.cc.Invoke(ctx, "/coordtransform.CoordTransform/GCJ02ToBd09", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coordTransformClient) Bd09ToWGS84(ctx context.Context, in *Point, opts ...grpc.CallOption) (*Point, error) {
	out := new(Point)
	err := c.cc.Invoke(ctx, "/coordtransform.CoordTransform/Bd09ToWGS84", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coordTransformClient) WGS84ToBd09(ctx context.Context, in *Point, opts ...grpc.CallOption) (*Point, error) {
	out := new(Point)
	err := c.cc.Invoke(ctx, "/coordtransform.CoordTransform/WGS84ToBd09", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CoordTransformServer is the server API for CoordTransform service.
type CoordTransformServer interface {
	GCJ02ToWGS84(context.Context, *Point) (*Point, error)
	WGS84ToGCJ02(context.Context, *Point) (*Point, error)
	Bd09ToGCJ02(context.Context, *Point) (*Point, error)
	GCJ02ToBd09(context.Context, *Point) (*Point, error)
	Bd09ToWGS84(context.Context, *Point) (*Point, error)
	WGS84ToBd09(context.Context, *Point) (*Point, error)
}

// UnimplementedCoordTransformServer can be embedded to have forward compatible implementations.
type UnimplementedCoordTransformServer struct {
}

func (*UnimplementedCoordTransformServer) GCJ02ToWGS84(context.Context, *Point) (*Point, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GCJ02ToWGS84 not implemented")
}
func (*UnimplementedCoordTransformServer) WGS84ToGCJ02(context.Context, *Point) (*Point, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WGS84ToGCJ02 not implemented")
}
func (*UnimplementedCoordTransformServer) Bd09ToGCJ02(context.Context, *Point) (*Point, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Bd09ToGCJ02 not implemented")
}
func (*UnimplementedCoordTransformServer) GCJ02ToBd09(context.Context, *Point) (*Point, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GCJ02ToBd09 not implemented")
}
func (*UnimplementedCoordTransformServer) Bd09ToWGS84(context.Context, *Point) (*Point, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Bd09ToWGS84 not implemented")
}
func (*UnimplementedCoordTransformServer) WGS84ToBd09(context.Context, *Point) (*Point, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WGS84ToBd09 not implemented")
}

func RegisterCoordTransformServer(s *grpc.Server, srv CoordTransformServer) {
	s.RegisterService(&_CoordTransform_serviceDesc, srv)
}

func _CoordTransform_GCJ02ToWGS84_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Point)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoordTransformServer).GCJ02ToWGS84(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coordtransform.CoordTransform/GCJ02ToWGS84",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoordTransformServer).GCJ02ToWGS84(ctx, req.(*Point))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoordTransform_WGS84ToGCJ02_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Point)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoordTransformServer).WGS84ToGCJ02(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coordtransform.CoordTransform/WGS84ToGCJ02",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoordTransformServer).WGS84ToGCJ02(ctx, req.(*Point))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoordTransform_Bd09ToGCJ02_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Point)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoordTransformServer).Bd09ToGCJ02(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coordtransform.CoordTransform/Bd09ToGCJ02",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoordTransformServer).Bd09ToGCJ02(ctx, req.(*Point))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoordTransform_GCJ02ToBd09_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Point)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoordTransformServer).GCJ02ToBd09(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coordtransform.CoordTransform/GCJ02ToBd09",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoordTransformServer).GCJ02ToBd09(ctx, req.(*Point))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoordTransform_Bd09ToWGS84_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Point)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoordTransformServer).Bd09ToWGS84(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coordtransform.CoordTransform/Bd09ToWGS84",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoordTransformServer).Bd09ToWGS84(ctx, req.(*Point))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoordTransform_WGS84ToBd09_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Point)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoordTransformServer).WGS84ToBd09(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coordtransform.CoordTransform/WGS84ToBd09",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoordTransformServer).WGS84ToBd09(ctx, req.(*Point))
	}
	return interceptor(ctx, in, info, handler)
}

var _CoordTransform_serviceDesc = grpc.ServiceDesc{
	ServiceName: "coordtransform.CoordTransform",
	HandlerType: (*CoordTransformServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GCJ02ToWGS84",
			Handler:    _CoordTransform_GCJ02ToWGS84_Handler,
		},
		{
			MethodName: "WGS84ToGCJ02",
			Handler:    _CoordTransform_WGS84ToGCJ02_Handler,
		},
		{
			MethodName: "Bd09ToGCJ02",
			Handler:    _CoordTransform_Bd09ToGCJ02_Handler,
		},
		{
			MethodName: "GCJ02ToBd09",
			Handler:    _CoordTransform_GCJ02ToBd09_Handler,
		},
		{
			MethodName: "Bd09ToWGS84",
			Handler:    _CoordTransform_Bd09ToWGS84_Handler,
		},
		{
			MethodName: "WGS84ToBd09",
			Handler:    _CoordTransform_WGS84ToBd09_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "coord_transform.proto",
}
